Comandos para compilar assinar e confirmar o APK.
ATENÇÃO NESSES COMANDOS:

APKTOOL:só pode ser utilizado na pasta raiz do java, se tentar fazer direto do terminal ele não vai reconhecer o comando.

ADB: esse comando fica instalando no root do sistema, independente de onde voce iniciar ele vai funcionar.

APKSIGNER:só pode ser utilizado na pasta raiz do java, se tentar fazer direto do terminal ele não vai reconhecer o comando.

ZIPALIGN:só pode ser utilizado na pasta raiz do java, se tentar fazer direto do terminal ele não vai reconhecer o comando.

KEYTOOL:só pode ser utilizado na pasta raiz do java, se tentar fazer direto do terminal ele não vai reconhecer o comando.















apktool b pasta_que_vai_ser_um_APK (COMPILAÇÃO DA PASTA PARA APK.)

keytool -genkey -v -keystore novo-keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias novo-alias (CRIAR UMA CHAVA DE ASSINATURA.)


java -jar apksigner.jar sign --ks seu-keystore.jks --ks-key-alias seu-alias --v1-signing-enabled true --v2-signing-enabled true AGEOS.apk(ASSINAR O APP CRIA OUTRO IGUAL MAS ASSINADO.)

java -jar apksigner.jar verify --verbose AGEOS.apk(VERIFICAR SE O APP ESTÁ ASSINADO)

java -jar apksigner.jar sign --ks meu-keystore.jks --ks-key-alias meu-alias --v1-signing-enabled true --v2-signing-enabled true --v3-signing-enabled true 1.apk
(INCLUIR O APK PARA TODAS ARQUITERURAS)

Verified using v1 scheme (JAR signing): true  
Verified using v2 scheme (APK Signature Scheme v2): true  
Verified using v3 scheme (APK Signature Scheme v3): true 

SE ESTIVER TRUE QUER DIZER QUE DEU CERTO.

AGEOS, SIMPLIFICANDO A TÉCNOLOGIA PARA O DIA DIA!
BY MARCELO.


